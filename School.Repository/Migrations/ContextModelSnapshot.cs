// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School.Repository.Data;

namespace School.Repository.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("School.Domain.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            LastName = "Kent",
                            Name = "Marta",
                            Phone = "33225555"
                        },
                        new
                        {
                            StudentID = 2,
                            LastName = "Isabela",
                            Name = "Paula",
                            Phone = "3354288"
                        },
                        new
                        {
                            StudentID = 3,
                            LastName = "Antonia",
                            Name = "Laura",
                            Phone = "55668899"
                        },
                        new
                        {
                            StudentID = 4,
                            LastName = "Maria",
                            Name = "Luiza",
                            Phone = "6565659"
                        },
                        new
                        {
                            StudentID = 5,
                            LastName = "Machado",
                            Name = "Lucas",
                            Phone = "565685415"
                        },
                        new
                        {
                            StudentID = 6,
                            LastName = "Alvares",
                            Name = "Pedro",
                            Phone = "456454545"
                        },
                        new
                        {
                            StudentID = 7,
                            LastName = "José",
                            Name = "Paulo",
                            Phone = "9874512"
                        });
                });

            modelBuilder.Entity("School.Domain.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("StudentID", "SubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("StudentSubjects");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            SubjectID = 2
                        },
                        new
                        {
                            StudentID = 1,
                            SubjectID = 4
                        },
                        new
                        {
                            StudentID = 1,
                            SubjectID = 5
                        },
                        new
                        {
                            StudentID = 2,
                            SubjectID = 1
                        },
                        new
                        {
                            StudentID = 2,
                            SubjectID = 2
                        },
                        new
                        {
                            StudentID = 2,
                            SubjectID = 5
                        },
                        new
                        {
                            StudentID = 3,
                            SubjectID = 1
                        },
                        new
                        {
                            StudentID = 3,
                            SubjectID = 2
                        },
                        new
                        {
                            StudentID = 3,
                            SubjectID = 3
                        },
                        new
                        {
                            StudentID = 4,
                            SubjectID = 1
                        },
                        new
                        {
                            StudentID = 4,
                            SubjectID = 4
                        },
                        new
                        {
                            StudentID = 4,
                            SubjectID = 5
                        },
                        new
                        {
                            StudentID = 5,
                            SubjectID = 4
                        },
                        new
                        {
                            StudentID = 5,
                            SubjectID = 5
                        },
                        new
                        {
                            StudentID = 6,
                            SubjectID = 1
                        },
                        new
                        {
                            StudentID = 6,
                            SubjectID = 2
                        },
                        new
                        {
                            StudentID = 6,
                            SubjectID = 3
                        },
                        new
                        {
                            StudentID = 6,
                            SubjectID = 4
                        },
                        new
                        {
                            StudentID = 7,
                            SubjectID = 1
                        },
                        new
                        {
                            StudentID = 7,
                            SubjectID = 2
                        },
                        new
                        {
                            StudentID = 7,
                            SubjectID = 3
                        },
                        new
                        {
                            StudentID = 7,
                            SubjectID = 4
                        },
                        new
                        {
                            StudentID = 7,
                            SubjectID = 5
                        });
                });

            modelBuilder.Entity("School.Domain.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("SubjectID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectID = 1,
                            Name = "Matemática",
                            TeacherID = 1
                        },
                        new
                        {
                            SubjectID = 2,
                            Name = "Física",
                            TeacherID = 2
                        },
                        new
                        {
                            SubjectID = 3,
                            Name = "Português",
                            TeacherID = 3
                        },
                        new
                        {
                            SubjectID = 4,
                            Name = "Inglês",
                            TeacherID = 4
                        },
                        new
                        {
                            SubjectID = 5,
                            Name = "Programação",
                            TeacherID = 5
                        });
                });

            modelBuilder.Entity("School.Domain.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherID");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherID = 1,
                            Name = "Lauro"
                        },
                        new
                        {
                            TeacherID = 2,
                            Name = "Roberto"
                        },
                        new
                        {
                            TeacherID = 3,
                            Name = "Ronaldo"
                        },
                        new
                        {
                            TeacherID = 4,
                            Name = "Rodrigo"
                        },
                        new
                        {
                            TeacherID = 5,
                            Name = "Alexandre"
                        });
                });

            modelBuilder.Entity("School.Domain.Models.StudentSubject", b =>
                {
                    b.HasOne("School.Domain.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Domain.Models.Subject", "Subject")
                        .WithMany("StudentsSubject")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("School.Domain.Models.Subject", b =>
                {
                    b.HasOne("School.Domain.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("School.Domain.Models.Subject", b =>
                {
                    b.Navigation("StudentsSubject");
                });

            modelBuilder.Entity("School.Domain.Models.Teacher", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
