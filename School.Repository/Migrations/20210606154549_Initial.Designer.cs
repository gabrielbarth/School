// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School.Repository.Data;

namespace School.Repository.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210606154549_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("School.Domain.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            Name = "Tecnologia da Informação"
                        },
                        new
                        {
                            CourseID = 2,
                            Name = "Sistemas de Informação"
                        },
                        new
                        {
                            CourseID = 3,
                            Name = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("School.Domain.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BornDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Enrolment")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrolmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            Active = true,
                            BornDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrolment = 1,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(2307),
                            LastName = "Kent",
                            Name = "Marta",
                            Phone = "33225555"
                        },
                        new
                        {
                            StudentID = 2,
                            Active = true,
                            BornDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrolment = 2,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(5580),
                            LastName = "Isabela",
                            Name = "Paula",
                            Phone = "3354288"
                        },
                        new
                        {
                            StudentID = 3,
                            Active = true,
                            BornDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrolment = 3,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(5648),
                            LastName = "Antonia",
                            Name = "Laura",
                            Phone = "55668899"
                        },
                        new
                        {
                            StudentID = 4,
                            Active = true,
                            BornDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrolment = 4,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(5654),
                            LastName = "Maria",
                            Name = "Luiza",
                            Phone = "6565659"
                        },
                        new
                        {
                            StudentID = 5,
                            Active = true,
                            BornDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrolment = 5,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(5659),
                            LastName = "Machado",
                            Name = "Lucas",
                            Phone = "565685415"
                        },
                        new
                        {
                            StudentID = 6,
                            Active = true,
                            BornDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrolment = 6,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(5668),
                            LastName = "Alvares",
                            Name = "Pedro",
                            Phone = "456454545"
                        },
                        new
                        {
                            StudentID = 7,
                            Active = true,
                            BornDate = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Enrolment = 7,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(5673),
                            LastName = "José",
                            Name = "Paulo",
                            Phone = "9874512"
                        });
                });

            modelBuilder.Entity("School.Domain.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentID", "CourseID");

                    b.HasIndex("CourseID");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("School.Domain.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentID", "SubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("StudentSubjects");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            SubjectID = 2,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(7436)
                        },
                        new
                        {
                            StudentID = 1,
                            SubjectID = 4,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8468)
                        },
                        new
                        {
                            StudentID = 1,
                            SubjectID = 5,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8531)
                        },
                        new
                        {
                            StudentID = 2,
                            SubjectID = 1,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8533)
                        },
                        new
                        {
                            StudentID = 2,
                            SubjectID = 2,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8539)
                        },
                        new
                        {
                            StudentID = 2,
                            SubjectID = 5,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8552)
                        },
                        new
                        {
                            StudentID = 3,
                            SubjectID = 1,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8557)
                        },
                        new
                        {
                            StudentID = 3,
                            SubjectID = 2,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8566)
                        },
                        new
                        {
                            StudentID = 3,
                            SubjectID = 3,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8568)
                        },
                        new
                        {
                            StudentID = 4,
                            SubjectID = 1,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8574)
                        },
                        new
                        {
                            StudentID = 4,
                            SubjectID = 4,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8575)
                        },
                        new
                        {
                            StudentID = 4,
                            SubjectID = 5,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8584)
                        },
                        new
                        {
                            StudentID = 5,
                            SubjectID = 4,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8585)
                        },
                        new
                        {
                            StudentID = 5,
                            SubjectID = 5,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8586)
                        },
                        new
                        {
                            StudentID = 6,
                            SubjectID = 1,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8588)
                        },
                        new
                        {
                            StudentID = 6,
                            SubjectID = 2,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8589)
                        },
                        new
                        {
                            StudentID = 6,
                            SubjectID = 3,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8591)
                        },
                        new
                        {
                            StudentID = 6,
                            SubjectID = 4,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8594)
                        },
                        new
                        {
                            StudentID = 7,
                            SubjectID = 1,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8595)
                        },
                        new
                        {
                            StudentID = 7,
                            SubjectID = 2,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8597)
                        },
                        new
                        {
                            StudentID = 7,
                            SubjectID = 3,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8598)
                        },
                        new
                        {
                            StudentID = 7,
                            SubjectID = 4,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8600)
                        },
                        new
                        {
                            StudentID = 7,
                            SubjectID = 5,
                            InitialDate = new DateTime(2021, 6, 6, 11, 45, 48, 497, DateTimeKind.Local).AddTicks(8601)
                        });
                });

            modelBuilder.Entity("School.Domain.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrerequisiteID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.Property<int>("Workload")
                        .HasColumnType("int");

                    b.HasKey("SubjectID");

                    b.HasIndex("CourseID");

                    b.HasIndex("PrerequisiteID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectID = 1,
                            CourseID = 1,
                            Name = "Matemática",
                            TeacherID = 1,
                            Workload = 0
                        },
                        new
                        {
                            SubjectID = 2,
                            CourseID = 3,
                            Name = "Matemática",
                            TeacherID = 1,
                            Workload = 0
                        },
                        new
                        {
                            SubjectID = 3,
                            CourseID = 3,
                            Name = "Física",
                            TeacherID = 2,
                            Workload = 0
                        },
                        new
                        {
                            SubjectID = 4,
                            CourseID = 1,
                            Name = "Português",
                            TeacherID = 3,
                            Workload = 0
                        },
                        new
                        {
                            SubjectID = 5,
                            CourseID = 1,
                            Name = "Inglês",
                            TeacherID = 4,
                            Workload = 0
                        },
                        new
                        {
                            SubjectID = 6,
                            CourseID = 2,
                            Name = "Inglês",
                            TeacherID = 4,
                            Workload = 0
                        },
                        new
                        {
                            SubjectID = 7,
                            CourseID = 3,
                            Name = "Inglês",
                            TeacherID = 4,
                            Workload = 0
                        },
                        new
                        {
                            SubjectID = 8,
                            CourseID = 1,
                            Name = "Programação",
                            TeacherID = 5,
                            Workload = 0
                        },
                        new
                        {
                            SubjectID = 9,
                            CourseID = 2,
                            Name = "Programação",
                            TeacherID = 5,
                            Workload = 0
                        },
                        new
                        {
                            SubjectID = 10,
                            CourseID = 3,
                            Name = "Programação",
                            TeacherID = 5,
                            Workload = 0
                        });
                });

            modelBuilder.Entity("School.Domain.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EnrolmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Registry")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TeacherID");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherID = 1,
                            Active = true,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 491, DateTimeKind.Local).AddTicks(6253),
                            LastName = "Oliveira",
                            Name = "Lauro",
                            Registry = 1
                        },
                        new
                        {
                            TeacherID = 2,
                            Active = true,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 493, DateTimeKind.Local).AddTicks(1623),
                            LastName = "Soares",
                            Name = "Roberto",
                            Registry = 2
                        },
                        new
                        {
                            TeacherID = 3,
                            Active = true,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 493, DateTimeKind.Local).AddTicks(1740),
                            LastName = "Marconi",
                            Name = "Ronaldo",
                            Registry = 3
                        },
                        new
                        {
                            TeacherID = 4,
                            Active = true,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 493, DateTimeKind.Local).AddTicks(1743),
                            LastName = "Carvalho",
                            Name = "Rodrigo",
                            Registry = 4
                        },
                        new
                        {
                            TeacherID = 5,
                            Active = true,
                            EnrolmentDate = new DateTime(2021, 6, 6, 11, 45, 48, 493, DateTimeKind.Local).AddTicks(1745),
                            LastName = "Montanha",
                            Name = "Alexandre",
                            Registry = 5
                        });
                });

            modelBuilder.Entity("School.Domain.Models.StudentCourse", b =>
                {
                    b.HasOne("School.Domain.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Domain.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("School.Domain.Models.StudentSubject", b =>
                {
                    b.HasOne("School.Domain.Models.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Domain.Models.Subject", "Subject")
                        .WithMany("StudentsSubject")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("School.Domain.Models.Subject", b =>
                {
                    b.HasOne("School.Domain.Models.Course", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School.Domain.Models.Subject", "Prerequisite")
                        .WithMany()
                        .HasForeignKey("PrerequisiteID");

                    b.HasOne("School.Domain.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Prerequisite");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("School.Domain.Models.Course", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("School.Domain.Models.Student", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("School.Domain.Models.Subject", b =>
                {
                    b.Navigation("StudentsSubject");
                });

            modelBuilder.Entity("School.Domain.Models.Teacher", b =>
                {
                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
